{"version":3,"sources":["App.js","actions/index.js","reducers/UpDown.js","reducers/index.js","Store.js","reportWebVitals.js","index.js"],"names":["App","myState","useSelector","state","changeTheNumber","dispatch","useDispatch","className","class","title","onClick","type","name","value","action","rootReducer","combineReducers","store","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAwCeA,EAjCH,WAMV,IAAMC,EAAUC,aAAY,SAACC,GAAD,OAC1BA,EAAMC,mBAEFC,EAAWC,cAEjB,OACE,mCACE,qBAAKC,UAAU,WAAf,SAGA,sBAAKC,MAAM,YAAX,UAEA,6DACA,uDAEA,sBAAKA,MAAM,WAAX,UACE,mBAAGA,MAAM,iBAAiBC,MAAM,YAAYC,QAAU,kBAAKL,ECtBzD,CACFM,KAAM,eDqBN,SAAmF,uCACnF,uBAAOC,KAAK,WAAWD,KAAK,OAAOH,MAAM,iBAAiBK,MAAOZ,IACjE,mBAAGO,MAAM,gBAAgBC,MAAM,YAAYC,QAAU,kBAAKL,EC9BxD,CACFM,KAAM,eD6BN,SAAiF,kD,OErB1EP,EATO,WAAgC,IAA/BD,EAA8B,uDADlC,EACyBW,EAAS,uCAE7C,OAAOA,EAAOH,MACV,IAAK,YAAa,OAAOR,EAAM,EAC/B,IAAK,YAAa,OAAOA,EAAM,EAC/B,QAAS,OAAOA,ICCbY,EAJIC,YAAgB,CAC/BZ,oBCCWa,EAFFC,YAAYH,GCSVI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUb,MAAOA,EAAjB,SACA,cAAC,EAAD,QAIFc,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e5a977a4.chunk.js","sourcesContent":["import React from 'react'\nimport \"./App.css\";\nimport {incNumber} from \"./actions/index\";\nimport {decNumber} from \"./actions/index\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst App = () => {\n\n  // it alternative to the useContext hooks in react / consumer from context API\n  // const changeTheNumber = useSelector(state => state.changeTheNumber);\n  \n  // const dispatch = useDispatch();\n  const myState = useSelector((state)=>\n    state.changeTheNumber\n  )\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className=\"main-div\">\n      \n\n      <div class=\"container\">\n  \n      <h1>Increment/Decrement counter</h1>\n      <h4>using React and Redux</h4>\n      \n      <div class=\"quantity\">\n        <a class=\"quantity-minus\" title=\"Decrement\" onClick={ ()=> dispatch(decNumber())} ><span>-</span></a>\n        <input name=\"quantity\" type=\"text\" class=\"quantity-input\" value={myState}  />\n        <a class=\"quantity-plus\" title=\"Increment\" onClick={ ()=> dispatch(incNumber())}><span>+</span></a>\n      </div>\n  \n          </div>\n        </div>\n    </>\n  )\n}\n\nexport default App","export  const incNumber=()=>{\r\n    return{\r\n        type: \"INCREMENT\"\r\n    }    \r\n}\r\n\r\nexport const decNumber=()=>{\r\n    return{\r\n        type: \"DECREMENT\"\r\n    }    \r\n}\r\n","const initialState=0;\r\nconst changeTheNumber=(state= initialState, action)=>{\r\n\r\n        switch(action.type){\r\n            case \"INCREMENT\": return state+1;\r\n            case \"DECREMENT\": return state-1;\r\n            default: return state;\r\n        }\r\n}\r\n\r\nexport default changeTheNumber;","import changeTheNumber from \"./UpDown\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst rootReducer= combineReducers({\r\n    changeTheNumber\r\n});\r\n\r\nexport default rootReducer;","import {createStore} from \"redux\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst store= createStore(rootReducer);\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./Store\";\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}